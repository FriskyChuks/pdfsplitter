# Generated by Django 4.2.16 on 2024-12-25 21:03

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('other_name', models.CharField(blank=True, max_length=50, null=True)),
                ('file_number', models.IntegerField(blank=True, null=True, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('passport', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='passport')),
            ],
            options={
                'db_table': 'accounts_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
                ('has_unit', models.BooleanField(default=True)),
                ('reports_to_cmd', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'accounts_department',
            },
        ),
        migrations.CreateModel(
            name='Directorate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'accounts_directorate',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'accounts_gender',
            },
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
            ],
            options={
                'db_table': 'registry_gradelevel',
            },
        ),
        migrations.CreateModel(
            name='SalaryScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'registry_salaryscale',
            },
        ),
        migrations.CreateModel(
            name='StaffCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'accounts_usergroup',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
            ],
            options={
                'db_table': 'accounts_unit',
            },
        ),
        migrations.CreateModel(
            name='EmploymentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ministry', models.CharField(max_length=100)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('step', models.IntegerField(blank=True, null=True)),
                ('ippis_no', models.IntegerField(blank=True, null=True)),
                ('qualifications', models.CharField(blank=True, max_length=225, null=True)),
                ('rank', models.CharField(blank=True, max_length=225, null=True)),
                ('first_appointment_date', models.DateField(blank=True, null=True)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('date_of_appt_with_fmc', models.DateField(blank=True, null=True)),
                ('present_appt_date', models.DateField(blank=True, null=True)),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.gradelevel')),
                ('salary_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.salaryscale')),
                ('staff_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.staffcategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'registry_employmentdetails',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='directorate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.directorate'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.department'),
        ),
        migrations.AddField(
            model_name='user',
            name='directorate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.directorate'),
        ),
        migrations.AddField(
            model_name='user',
            name='gender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.gender'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.unit'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.usergroup'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
